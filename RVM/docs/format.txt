RVM可执行文件格式 .rc
常量池
自身属性
成员声明
代码段

常量池
格式：
常量数量M 2B
常量1长度N (2B) 常量1内容(NB)
常量2长度N (2B) 常量2内容(NB)
常量3长度N (2B) 常量3内容(NB)
常量M长度N (2B) 常量M内容(NB)

如：
0x0C "Hello,World!"

自身属性:
访问权限 2b
是否为成员类 1b
父类数量 5b
父类（常量池编号）NB

成员声明分为属性声明，成员类声明与方法声明
属性声明：访问权限 [static] [const] 属性名(常量池编号)
成员类声明: 成员类名(常量池编号)
方法声明: 访问权限 [final] 函数签名(常量池编号) 函数开头处于代码段的第几条指令

ps:如果中括号内内容存在/成立为1,否则为0
比如[static]代表为static成员为1，否则为0

顺序为：

属性数量 2B
属性声明
方法数量 2B
方法声明
成员类数量 2B
成员类声明

访问权限：public(0) friendly(1) protected(2) private(3)
访问权限：2bit static: 1bit const/final: 1bit 常量池编号2B 参数数量 1B
访问权限、static、const/final共1B
分布:
                             Byte 1
  bit8    bit7    bit6    bit5    bit4    bit3    bit2    bit1
                              const/final static    访问权限
举个例子，设属性A名字在常量池的第0x0010项, protected static
那么这个声明看上去会像这样:
BIN:00000110 00000000 00010000
HEX:0x06 0x00 0x10

代码段：
RT，代码
指令:
[指令码] [指示符] [操作数]
  1B      1B       NB
指令码:
0x00 nop 空操作, 无操作数
0x01 add 加法, 无操作数
0x02 sub 减法, 无操作数
0x03 mul 乘法, 无操作数
0x04 div 除法, 无操作数
0x05 mod 取余, 无操作数
0x06 shr 右移, 无操作数
0x07 shl 左移, 无操作数
0x08 push 压入, 1操作数（变量/常量/立即数）
0x09 pop 弹出, 1操作数（变量）
0x0A call 调用, 1操作数（常量）
0x0B sml 小于, 无操作数
0x0C big 大于, 无操作数
0x0D equ 等于, 无操作数
0x0E seq 小于等于, 无操作数
0x0F beq 大于等于, 无操作数
0x10 not 非, 无操作数
0x11 neg 取反, 无操作数
0x12 and 与, 无操作数
0x13 or 或, 无操作数
0x14 xor 异或, 无操作数
0x15 jmp 跳转, 1操作数（立即数）
0x16 jf 假跳转, 1操作数（立即数）
0x17 jt 真跳转, 1操作数（立即数）
0x18 ret 退出, 无操作数
0x19 load 将某个类中的非静态对象作为变量加载到变量池中，参数为变量池编号，应按顺序压入对象及变量路径(类路径+.+变量名) 1操作数（变量）
0x1A as 将某个类中的静态对象作为变量加载到变量池中，参数为变量池编号，应压入变量路径 1操作数（变量）
0xff __print_test 测试输出 1操作数（变量/常量/立即数）
指示符：
0x00: 无操作数(0b)
0x01: 常量池编号(4b)
0x02: 常量池编号(8b)
0x03: 变量池编号(4b)
0x04: 变量池编号(8b)
0x05: 立即数(1b)
0x06: 立即数(2b)
0x07: 立即数(4b)
0x08: 立即数(8b)
1个操作数

成员类：
内容位于(类名+.+成员类名+.rc)文件

函数签名：
名字(参数类型列表)返回类型
对于静态函数，返回类型后会加上#static

如
static void main(string[] args)
main(S[];)V#static

int add(int a, int b, Rain.Language.Utils.List list)
add(I;I;Rain.Language.Utils.List;)I

参数从左到右入栈
to be continue